C51 COMPILER V8.08   MAIN                                                                  09/10/2008 13:24:02 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Main.C OPTIMIZE(4,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <intrins.h>
   2          #include "def.h"
   3          #include "mpu.h"
   4          //#include      "W77E516.h"
   5          extern void printf(BYTE code *pString);
   6          extern void putHEX(BYTE OneHEX);
   7          BYTE READ(void);                //PC       ==>W77E516
   8          void SEND(BYTE c);               //W77E516 ==>TP2852
   9          BYTE data _data0;
  10          BYTE data _data1;
  11          bdata bit ReceiveFlag0;
  12          bdata bit ReceiveFlag1;
  13          //===================================================================
  14          //      F: UART_WriteData()
  15          //===================================================================
  16          extern void UART_WriteDataToSerial1(BYTE Data);
  17          extern void UART_WriteDataToSerial0(BYTE Data);
  18          extern void InitUART(void);
  19          extern void DelayX1ms(unsigned int count);
  20          extern void DelayX10ms(unsigned int count);
  21          //==============================
  22          //      
  23          //      ISP_Trigger()
  24          //==============================
  25          void ISP_Trigger()
  26          {
  27   1              T_P2_6 = 0;
  28   1              T_P2_7 = 0;
  29   1              DelayX10ms(6);
  30   1              Reset = 1;
  31   1              DelayX10ms(16);
  32   1              Reset = 0;
  33   1              T_P2_6 = 0;
  34   1              T_P2_7 = 0;
  35   1              DelayX10ms(16);
  36   1              T_P2_6 = 1;
  37   1              T_P2_7 = 1;     
  38   1      
  39   1      }      
  40          
  41          void InitVar()
  42          {
  43   1              Reset = 0;
  44   1              ReceiveFlag0 = FALSE;
  45   1              ReceiveFlag1 = FALSE;
  46   1      }
  47          void main(void)
  48          {
  49   1               InitVar();
  50   1              InitUART();
  51   1              //printf("\r\n<<InitUart>>");
  52   1              ISP_Trigger();
  53   1              //_data0 = 0xFF;
  54   1      //      P1= 0xFF;
  55   1              while(1)
C51 COMPILER V8.08   MAIN                                                                  09/10/2008 13:24:02 PAGE 2   

  56   1              {
  57   2      #if 0 
                              if(ReceiveFlag1)
                        {
              
                                      UART_WriteDataToSerial0(_data1);
                                      //SBUF = _data1;
                                      ReceiveFlag1 = FALSE;
                        }
                        if(ReceiveFlag0)
                        {
                      
                                      UART_WriteDataToSerial1(_data0);
                                      //SBUF1 = _data0;
                                      ReceiveFlag0 = FALSE;
                        }
              #endif
  73   2                              //P1= ~ P1;
  74   2              //      P1=~READ();
  75   2              //      SEND(P1);
  76   2              }
  77   1      }
  78          #if     1
  79          //////////////////////////////////////
  80          // UART Interrupt
  81          ///////////////////////////////////////
  82          //===================================================================
  83          //      F: UART_S()
  84          //===================================================================  
  85          void UART_S0(void) interrupt 4
  86          {
  87   1      //      BYTE temp; // loop index
  88   1      
  89   1      
  90   1              EA = 0; // disable all interrupt
  91   1          //P1 = 0x00;
  92   1              
  93   1              if (_testbit_(TI) == 0) // check if translate command
  94   1                      {
  95   2                              _data0 = SBUF; // recieve UAR
  96   2                              RI = 0; // clear UART recieve interrupt
  97   2                              
  98   2                              UART_WriteDataToSerial1(_data0);
  99   2                      
 100   2                      } // if TI
 101   1                      
 102   1              EA = 1; // release EA bit
 103   1      }
 104          //////////////////////////////////////
 105          // UART Interrupt
 106          ///////////////////////////////////////
 107          //===================================================================
 108          //      F: UART_S()
 109          //===================================================================  
 110          void UART_S1(void) interrupt 7
 111          {
 112   1      //      BYTE temp; // loop index
 113   1      
 114   1      
 115   1              EA = 0; // disable all interrupt
 116   1          //P1 = 0x00;
 117   1              
C51 COMPILER V8.08   MAIN                                                                  09/10/2008 13:24:02 PAGE 3   

 118   1              if (_testbit_(TI_1) == 0) // check if translate command
 119   1                      {
 120   2                              _data1 = SBUF1; // recieve UAR
 121   2                              RI_1 = 0; // clear UART recieve interrupt
 122   2                      
 123   2                         UART_WriteDataToSerial0(_data1);
 124   2                        
 125   2                      
 126   2                      } // if TI
 127   1                
 128   1              EA = 1; // release EA bit
 129   1      }
 130          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    203    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
